jQuery(document).ready(function ($) {
  $(".form-cek-resi").on("submit", function (e) {
    e.preventDefault();

    // Ambil nomor AWB dari input
    var awbNumber = $("#tracking").val();

    $("#modalResiContent").html(
      '<div class="modal-header"><h1 class="modal-title fs-5" id="modalResiLabel">Memuat data</h1><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body text-center" id="modalResiBody"><div class="spinner-border" role="status"><span class="sr-only">Loading...</span></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button></div>'
    );

    // Lakukan validasi nomor AWB (sesuai kebutuhan)
    if (!awbNumber) {
      alert("Masukkan No AWB");
      return;
    }

    // Kirim permintaan Ajax
    $.ajax({
      type: "POST",
      url: sweetaddons.ajaxurl, // Variabel global WordPress untuk URL Ajax
      data: {
        action: "get_post_by_awb",
        awbNumber: awbNumber,
      },
      success: function (response) {
        // Tampilkan data post dalam modal
        $("#modalResiContent").html(response);
        // $("#modalResi").modal("show");
      },
      error: function (error) {
        console.log(error);
      },
    });
  });

  $(document).ready(function () {
    function updateClock() {
      var now = new Date();
      var hours = now.getHours();
      var minutes = now.getMinutes();
      var seconds = now.getSeconds();

      // Tambahkan nol di depan jika jam, menit, atau detik kurang dari 10
      hours = hours < 10 ? "0" + hours : hours;
      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;

      // Format waktu: HH:MM:SS
      var timeString = hours + ":" + minutes + ":" + seconds;

      // Tampilkan waktu di elemen dengan id "clock"
      $(".real-time-clock").html(timeString);

      // Update waktu setiap 1 detik
      setTimeout(updateClock, 1000);
    }

    // Panggil fungsi pertama kali
    updateClock();
    // Memeriksa apakah browser mendukung geolocation
  });

  // Jika tombol #tombol-check ditekan, lakukan simpan data dengan wp json
  $("#tombol-check").on("click", function () {
    let status = $(this).data("status");
    let title = $(this).data("title");
    let text = $(this).data("text");
    let confirmButtonText = $(this).data("confirm");
    let responseText = $(this).data("response");
    let latitude = "";
    let longitude = "";

    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition(
        function (position) {
          latitude = position.coords.latitude;
          longitude = position.coords.longitude;
          // Di sini, Anda dapat menggunakan nilai latitude dan longitude sesuai kebutuhan bisnis Anda.
        },
        function (error) {
          console.log("Error getting geolocation: " + error.message);
        }
      );
    } else {
      console.log("Geolocation is not supported by this browser.");
    }

    var video = document.createElement("video");
    var canvas = document.createElement("canvas");
    var context = canvas.getContext("2d");

    // Function to capture the image and display it
    function captureImage() {
      // Set the canvas size based on the video dimensions
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;

      // Draw the video frame onto the canvas
      context.drawImage(video, 0, 0, canvas.width, canvas.height);

      // Get the image data in base64 format
      var imageData = canvas.toDataURL("image/png");

      // Display the captured image
      $(".camera-container").html(
        '<img class="rounded-circle mx-auto d-block" style="width: 300px !important; height: 300px !important; object-fit: cover" src="' +
          imageData +
          '">'
      );
    }

    // Wait for the video metadata to load
    video.addEventListener("loadedmetadata", function () {
      // Wait for the video data to load
      video.addEventListener("loadeddata", function () {
        // Now that the video is fully loaded, you can capture the image
        captureImage();
      });
    });

    // Set up the video source (e.g., webcam)
    navigator.mediaDevices
      .getUserMedia({ video: true })
      .then(function (stream) {
        // Assign the video stream to the video element
        video.srcObject = stream;

        // Play the video
        video.play();
      })
      .catch(function (error) {
        console.log("Error accessing webcam: " + error.message);
      });

    Swal.fire({
      title: title || "Check In!",
      text: text || "Yakin ingin checkin?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: confirmButtonText || "Checkin sekarang!",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: wss_attendance_ajax.ajax_url,
          type: "POST",
          data: {
            action: "handle_check_in",
            lokasi: latitude + "," + longitude,
            security: wss_attendance_ajax.ajax_nonce,
          },
          success: function (response) {
            Swal.fire({
              title: "Berhasil!",
              text: responseText || "Checkin berhasil!",
              icon: "success",
              timer: 2000, // Waktu dalam milidetik (2 detik)
              timerProgressBar: true, // Menampilkan progress bar
              showConfirmButton: false, // Tidak menampilkan tombol OK
            }).then(() => {
              // Setelah SweetAlert ditutup, refresh halaman
              setTimeout(() => {
                location.reload();
              }, 2000); // Waktu penundaan dalam milidetik (2 detik)
            });
          },
        });
      }
    });
  });

  $(document).ready(function () {
    const video = $("#video")[0];

    // Menggunakan variabel untuk melacak apakah foto sudah diambil atau belum
    let isPhotoTaken = false;

    navigator.mediaDevices
      .getUserMedia({ video: true })
      .then(function (stream) {
        video.srcObject = stream;
      })
      .catch(function (error) {
        console.error("Error accessing the camera:", error);
      });
  });
});


// Mengecek apakah data sudah ada di local storage
if (!localStorage.getItem('provincesData')) {
  // Jika tidak ada, maka ambil data dari URL
  fetch('https://aadiityaak.github.io/api-wilayah-indonesia/api/provinces.json')
    .then(response => response.json())
    .then(data => {
      // Mengonversi data menjadi string JSON
      const jsonString = JSON.stringify(data);

      // Menyimpan string JSON ke local storage dengan kunci tertentu
      localStorage.setItem('provincesData', jsonString);

      console.log('Data berhasil diambil dan disimpan di local storage.');
    })
    .catch(error => console.error('Terjadi kesalahan:', error));
} else {
  console.log('Data sudah ada di local storage.');
}